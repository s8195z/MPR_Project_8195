package com.pl.aga.services;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

import MPR_Project_8195.Pracownik;


public class PracownikDBManager {

	private Connection conn;

	private Statement stmt;

	private PreparedStatement addPracownikStmt;
	private PreparedStatement getPracownikStmt;


	public PracownikDBManager()
	{
		try {
			

			conn= DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/workdb");

			stmt=conn.createStatement();
			boolean pracownikTableExists=false;

			ResultSet rs= conn.getMetaData().getTables(null, null, null, null);

			while(rs.next())
			{
				if("Pracownik".equalsIgnoreCase(rs.getString("TABLE_NAME")))
					{
						pracownikTableExists=true;
						break;
					}
			}


			if(!pracownikTableExists)
			{
				stmt.executeUpdate("" +
					"CREATE TABLE pracownik(" +
					"id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
					"name varchar(20)," +
					"" +
					")");
			}

			addPracownikStmt=conn.prepareStatement("" +
					"INSERT INTO pracownik (name) VALUES (?)" +
					"");

			getPracownikStmt=conn.prepareStatement("" +
					"SELECT * FROM pracownik" +
					"");



		} catch (SQLException e) {

			e.printStackTrace();
		}
	}

	public void addPracownik(Pracownik p)
	{
		try {
			addPracownikStmt.setString(1, p.getImie());

			addPracownikStmt.executeUpdate();

		} catch (SQLException e) {

			e.printStackTrace();
		}

	}

	public List<Pracownik> getAllPracownicy()
	{
		List<Pracownik> pracownik=new ArrayList<Pracownik>();

		try {
			ResultSet rs= getPracownikStmt.executeQuery();

			while(rs.next())
			{
				pracownik.add(new Pracownik(rs.getString("Imie"), null, 0, 0, 0));
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return pracownik;
	}


}
